<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>spring-cloud-kubernetes-examples</artifactId>
		<groupId>org.springframework.cloud</groupId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.cloud</groupId>
	<artifactId>kubernetes-hello-world</artifactId>
	<name>Spring Cloud Kubernetes :: Examples :: Hello World</name>
	<description>A simple example that demonstrates how to build and test a basic spring
		cloud kubernetes app
	</description>

	<properties>
		<spring-boot.build-image.skip>true</spring-boot.build-image.skip>
		<spring-boot.build-image.imageName>spring-cloud-kubernetes/${project.artifactId}:latest</spring-boot.build-image.imageName>
		<jkube.generator.name>${spring-boot.build-image.imageName}</jkube.generator.name>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<type>pom</type>
				<scope>import</scope>
				<version>${spring-boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-kubernetes-fabric8-autoconfig</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-kubernetes-discovery</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-commons</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--
			We need that(actuator) so that it can be used in readiness probes.
			Readiness checks are needed by arquillian, so that it
			knows when to run the actual test.
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
							<goal>build-image</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!--skip deploy -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>true</skipTests>
					<!-- Workaround for https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jkube</groupId>
				<artifactId>kubernetes-maven-plugin</artifactId>
				<version>${jkube.version}</version>
				<executions>
					<execution>
						<id>jkube</id>
						<goals>
							<goal>resource</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>kubernetes</id>
			<properties>
				<spring-boot.build-image.skip>false</spring-boot.build-image.skip>
				<jkube.enricher.jkube-service.type>NodePort</jkube.enricher.jkube-service.type>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jkube</groupId>
						<artifactId>kubernetes-maven-plugin</artifactId>
						<version>${jkube.version}</version>
						<executions>
							<execution>
								<id>jkube</id>
								<goals>
									<goal>resource</goal>
									<goal>helm</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>integration</id>
			<properties>
				<spring-boot.build-image.skip>false</spring-boot.build-image.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>run-integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- https://stackoverflow.com/a/52532095 -->
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<skipTests>false</skipTests>
							<skipITs>false</skipITs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
